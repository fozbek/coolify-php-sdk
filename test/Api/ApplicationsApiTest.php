<?php
/**
 * ApplicationsApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Coolify
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ApplicationsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ApplicationsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDockercomposeApplication
     *
     * Create (Docker Compose).
     *
     */
    public function testCreateDockercomposeApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDockerfileApplication
     *
     * Create (Dockerfile).
     *
     */
    public function testCreateDockerfileApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDockerimageApplication
     *
     * Create (Docker Image).
     *
     */
    public function testCreateDockerimageApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createEnvByApplicationUuid
     *
     * Create Env.
     *
     */
    public function testCreateEnvByApplicationUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPrivateDeployKeyApplication
     *
     * Create (Private - Deploy Key).
     *
     */
    public function testCreatePrivateDeployKeyApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPrivateGithubAppApplication
     *
     * Create (Private - GH App).
     *
     */
    public function testCreatePrivateGithubAppApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPublicApplication
     *
     * Create (Public).
     *
     */
    public function testCreatePublicApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteApplicationByUuid
     *
     * Delete.
     *
     */
    public function testDeleteApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvByApplicationUuid
     *
     * Delete Env.
     *
     */
    public function testDeleteEnvByApplicationUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApplicationByUuid
     *
     * Get.
     *
     */
    public function testGetApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApplicationLogsByUuid
     *
     * Get application logs..
     *
     */
    public function testGetApplicationLogsByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listApplications
     *
     * List.
     *
     */
    public function testListApplications()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listEnvsByApplicationUuid
     *
     * List Envs.
     *
     */
    public function testListEnvsByApplicationUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartApplicationByUuid
     *
     * Restart.
     *
     */
    public function testRestartApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startApplicationByUuid
     *
     * Start.
     *
     */
    public function testStartApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopApplicationByUuid
     *
     * Stop.
     *
     */
    public function testStopApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateApplicationByUuid
     *
     * Update.
     *
     */
    public function testUpdateApplicationByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEnvByApplicationUuid
     *
     * Update Env.
     *
     */
    public function testUpdateEnvByApplicationUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEnvsByApplicationUuid
     *
     * Update Envs (Bulk).
     *
     */
    public function testUpdateEnvsByApplicationUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
