<?php
/**
 * ServerSettingTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Coolify
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ServerSettingTest Class Doc Comment
 *
 * @category    Class
 * @description Server Settings model
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ServerSettingTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ServerSetting"
     */
    public function testServerSetting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "concurrent_builds"
     */
    public function testPropertyConcurrentBuilds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dynamic_timeout"
     */
    public function testPropertyDynamicTimeout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "force_disabled"
     */
    public function testPropertyForceDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "force_server_cleanup"
     */
    public function testPropertyForceServerCleanup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_build_server"
     */
    public function testPropertyIsBuildServer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_cloudflare_tunnel"
     */
    public function testPropertyIsCloudflareTunnel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_jump_server"
     */
    public function testPropertyIsJumpServer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_logdrain_axiom_enabled"
     */
    public function testPropertyIsLogdrainAxiomEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_logdrain_custom_enabled"
     */
    public function testPropertyIsLogdrainCustomEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_logdrain_highlight_enabled"
     */
    public function testPropertyIsLogdrainHighlightEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_logdrain_newrelic_enabled"
     */
    public function testPropertyIsLogdrainNewrelicEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_metrics_enabled"
     */
    public function testPropertyIsMetricsEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_reachable"
     */
    public function testPropertyIsReachable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_sentinel_enabled"
     */
    public function testPropertyIsSentinelEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_swarm_manager"
     */
    public function testPropertyIsSwarmManager()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_swarm_worker"
     */
    public function testPropertyIsSwarmWorker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_usable"
     */
    public function testPropertyIsUsable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_axiom_api_key"
     */
    public function testPropertyLogdrainAxiomApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_axiom_dataset_name"
     */
    public function testPropertyLogdrainAxiomDatasetName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_custom_config"
     */
    public function testPropertyLogdrainCustomConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_custom_config_parser"
     */
    public function testPropertyLogdrainCustomConfigParser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_highlight_project_id"
     */
    public function testPropertyLogdrainHighlightProjectId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_newrelic_base_uri"
     */
    public function testPropertyLogdrainNewrelicBaseUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logdrain_newrelic_license_key"
     */
    public function testPropertyLogdrainNewrelicLicenseKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sentinel_metrics_history_days"
     */
    public function testPropertySentinelMetricsHistoryDays()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sentinel_metrics_refresh_rate_seconds"
     */
    public function testPropertySentinelMetricsRefreshRateSeconds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sentinel_token"
     */
    public function testPropertySentinelToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_cleanup_frequency"
     */
    public function testPropertyDockerCleanupFrequency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_cleanup_threshold"
     */
    public function testPropertyDockerCleanupThreshold()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "server_id"
     */
    public function testPropertyServerId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wildcard_domain"
     */
    public function testPropertyWildcardDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delete_unused_volumes"
     */
    public function testPropertyDeleteUnusedVolumes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delete_unused_networks"
     */
    public function testPropertyDeleteUnusedNetworks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
