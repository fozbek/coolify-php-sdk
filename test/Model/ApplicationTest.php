<?php
/**
 * ApplicationTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Coolify
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ApplicationTest Class Doc Comment
 *
 * @category    Class
 * @description Application model
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ApplicationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Application"
     */
    public function testApplication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "repository_project_id"
     */
    public function testPropertyRepositoryProjectId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uuid"
     */
    public function testPropertyUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fqdn"
     */
    public function testPropertyFqdn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "config_hash"
     */
    public function testPropertyConfigHash()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "git_repository"
     */
    public function testPropertyGitRepository()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "git_branch"
     */
    public function testPropertyGitBranch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "git_commit_sha"
     */
    public function testPropertyGitCommitSha()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "git_full_url"
     */
    public function testPropertyGitFullUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_registry_image_name"
     */
    public function testPropertyDockerRegistryImageName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_registry_image_tag"
     */
    public function testPropertyDockerRegistryImageTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "build_pack"
     */
    public function testPropertyBuildPack()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "static_image"
     */
    public function testPropertyStaticImage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "install_command"
     */
    public function testPropertyInstallCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "build_command"
     */
    public function testPropertyBuildCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "start_command"
     */
    public function testPropertyStartCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ports_exposes"
     */
    public function testPropertyPortsExposes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ports_mappings"
     */
    public function testPropertyPortsMappings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_network_aliases"
     */
    public function testPropertyCustomNetworkAliases()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_directory"
     */
    public function testPropertyBaseDirectory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publish_directory"
     */
    public function testPropertyPublishDirectory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_enabled"
     */
    public function testPropertyHealthCheckEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_path"
     */
    public function testPropertyHealthCheckPath()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_port"
     */
    public function testPropertyHealthCheckPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_host"
     */
    public function testPropertyHealthCheckHost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_method"
     */
    public function testPropertyHealthCheckMethod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_return_code"
     */
    public function testPropertyHealthCheckReturnCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_scheme"
     */
    public function testPropertyHealthCheckScheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_response_text"
     */
    public function testPropertyHealthCheckResponseText()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_interval"
     */
    public function testPropertyHealthCheckInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_timeout"
     */
    public function testPropertyHealthCheckTimeout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_retries"
     */
    public function testPropertyHealthCheckRetries()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "health_check_start_period"
     */
    public function testPropertyHealthCheckStartPeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_memory"
     */
    public function testPropertyLimitsMemory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_memory_swap"
     */
    public function testPropertyLimitsMemorySwap()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_memory_swappiness"
     */
    public function testPropertyLimitsMemorySwappiness()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_memory_reservation"
     */
    public function testPropertyLimitsMemoryReservation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_cpus"
     */
    public function testPropertyLimitsCpus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_cpuset"
     */
    public function testPropertyLimitsCpuset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limits_cpu_shares"
     */
    public function testPropertyLimitsCpuShares()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preview_url_template"
     */
    public function testPropertyPreviewUrlTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "destination_type"
     */
    public function testPropertyDestinationType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "destination_id"
     */
    public function testPropertyDestinationId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "source_id"
     */
    public function testPropertySourceId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "private_key_id"
     */
    public function testPropertyPrivateKeyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "environment_id"
     */
    public function testPropertyEnvironmentId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dockerfile"
     */
    public function testPropertyDockerfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dockerfile_location"
     */
    public function testPropertyDockerfileLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_labels"
     */
    public function testPropertyCustomLabels()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dockerfile_target_build"
     */
    public function testPropertyDockerfileTargetBuild()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_webhook_secret_github"
     */
    public function testPropertyManualWebhookSecretGithub()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_webhook_secret_gitlab"
     */
    public function testPropertyManualWebhookSecretGitlab()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_webhook_secret_bitbucket"
     */
    public function testPropertyManualWebhookSecretBitbucket()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_webhook_secret_gitea"
     */
    public function testPropertyManualWebhookSecretGitea()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose_location"
     */
    public function testPropertyDockerComposeLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose"
     */
    public function testPropertyDockerCompose()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose_raw"
     */
    public function testPropertyDockerComposeRaw()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose_domains"
     */
    public function testPropertyDockerComposeDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose_custom_start_command"
     */
    public function testPropertyDockerComposeCustomStartCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "docker_compose_custom_build_command"
     */
    public function testPropertyDockerComposeCustomBuildCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "swarm_replicas"
     */
    public function testPropertySwarmReplicas()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "swarm_placement_constraints"
     */
    public function testPropertySwarmPlacementConstraints()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_docker_run_options"
     */
    public function testPropertyCustomDockerRunOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "post_deployment_command"
     */
    public function testPropertyPostDeploymentCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "post_deployment_command_container"
     */
    public function testPropertyPostDeploymentCommandContainer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pre_deployment_command"
     */
    public function testPropertyPreDeploymentCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pre_deployment_command_container"
     */
    public function testPropertyPreDeploymentCommandContainer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "watch_paths"
     */
    public function testPropertyWatchPaths()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_healthcheck_found"
     */
    public function testPropertyCustomHealthcheckFound()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "redirect"
     */
    public function testPropertyRedirect()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleted_at"
     */
    public function testPropertyDeletedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "compose_parsing_version"
     */
    public function testPropertyComposeParsingVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_nginx_configuration"
     */
    public function testPropertyCustomNginxConfiguration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_http_basic_auth_enabled"
     */
    public function testPropertyIsHttpBasicAuthEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "http_basic_auth_username"
     */
    public function testPropertyHttpBasicAuthUsername()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "http_basic_auth_password"
     */
    public function testPropertyHttpBasicAuthPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
